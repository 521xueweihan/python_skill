#coding:utf-8
################
# 18.构建合理的包层次来管理module
###############
"""
前言:本质上每一个Python文件都是一个模块，使用模块可以增强代码的可维护性和可重用性。
在大型项目中，我们需要合理地组织项目的层次来管理模块，这就是包（Package）。
"""

# 笔记
#
# 简单的说包就是目录，与目录不同的是，它除了包含模块以外，还包含一个__init__.py文件，
# 它的作用是区别包和不同目录。
# 同时他允许嵌套。
# 1.直接导入一个包，调用时Package.a
#import Package
#
# 2.导入子模块或者子包，可以直接使用Module1.name
#from Package import Module1
#
# 包的使用能够带来以下便利：
# 1.合理组织代码，有利于维护和使用：使用项目结构更为完善和合理，从而增强代码的可维护性和实用性
# 2.能够有效地避免名称空间冲突：使用from...import访问是不需要加入包名；如果模块包含的属性或者方法
# 存在同名冲突，使用import modle 可以有效地避免名称冲突。
